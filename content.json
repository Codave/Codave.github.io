{"meta":{"title":"未来可期","subtitle":"技术博客","description":"不负过往，不惧未来。","author":"Codave","url":"https://codave.github.io"},"pages":[{"title":"关于","date":"2018-10-20T06:55:15.000Z","updated":"2019-01-23T08:11:17.850Z","comments":true,"path":"about/index.html","permalink":"https://codave.github.io/about/index.html","excerpt":"","text":"“人永远都无法知道自己该要什么，因为人只能活一次，既不能拿它跟前世相比，也不能在来生加以修正。没有任何方法可以检验哪种抉择是好的，因为不存在任何比较。一切都是马上经历，仅此一次，不能准备。”"},{"title":"分类","date":"2018-10-20T06:50:31.000Z","updated":"2018-10-21T01:41:51.465Z","comments":true,"path":"categories/index.html","permalink":"https://codave.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-10-20T06:48:56.000Z","updated":"2018-10-21T01:42:10.598Z","comments":true,"path":"tags/index.html","permalink":"https://codave.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"关于别人-假装一次失恋","slug":"关于别人-假装一次失恋","date":"2019-01-30T16:20:59.000Z","updated":"2019-01-30T16:31:10.595Z","comments":true,"path":"2019/01/31/关于别人-假装一次失恋/","link":"","permalink":"https://codave.github.io/2019/01/31/关于别人-假装一次失恋/","excerpt":"","text":"致朋友: 世界这么大，能遇见不容易。没遇见你之前，我觉得单身真好，遇见你之后，我每天都在祈求有情人终成眷属。假如人生不曾相遇，我不会相信，有一种人一认识就觉得温暖。在我眼中，你是背后有光的人，是身上会发光的人。你是信仰，我依赖，我信任，是我努力的方向。我把自己当做丑小鸭，与你相比相差太多，却在默默追赶你的脚步。因为你，我愿意成为一个更好的人，发奋努力只是为了证明我能足以与你相配。 我知道你不喜欢我，没关系，喜欢是一个人的事，爱才是两个人的事。但是你却很介意我喜欢你，这让我好难过，别人说没有在深夜里痛苦过的人不足以谈人生，哭过了我也不谈人生。虽然我对未来设想过，现在都变成泡沫了，未来的那些憧憬真的好可笑。有时候觉得我们真的挺配的，呵呵，看吧我就是这么一个不要脸的人，一个总是抱怨别人、自持高大、目中无人的人。我多想在你心中树立良好的形象，现在完全毁了。你说我们之间不可能，让我别喜欢你，这些话让心真的好痛。 我觉得世界上所有事情都在你没有准备好的时候，就开始，在你准备好的时候，就结束了。爱情需要承诺，友情却常被坚信，如果很要好的朋友离开，会比恋人分手更痛更难释怀。昨晚又梦见你了，午夜梦回都是往事的片段，美好都是那么易逝。当我习惯了你的好，你又开玩笑般的离开了，为你选的生日礼物还来不及送出去。我想和你在一起，一直走下去，可是我做不到，我不配，像我这样的人配不上你。 你是个善良懂礼貌的女孩，你是个值得欢喜的人，你的心杯不该为我而空。我还是很庆幸你出现在我的生命里，以后，你会遇到自己喜欢也喜欢自己的人，会有自己的幸福，愿你始终相信爱情，不受世事桎梏，找到一个不是将就的人。那时我依然会说我喜欢你，今天我这么说，十年之后我依然这么说。曾经看过一个失恋女生写过这么一段话：略了卑微的我自己，当你告诉我你要离开我，我竭力忍住不说我爱你，只平淡告诉你，你期待的人一定会很爱你。我想在后面再加一句：我真的舍不得。 我喜欢我们的未来，我们的过去，我喜欢你，简简单单。你倦了，你走了，你又忘了，可我真的从来没想过要离开，宁愿做配角，也要陪在你身边。不管你怎么说，我都认为自己的感受才是正确的，无论你怎么看，我绝不打乱自己的节奏，喜欢的事自然可以坚持，不喜欢怎么也长久不了。 你眼中的世界那么大，却容不下我。人生最痛不过错过了却还爱着。我奢求自己以后可以遇见一个和你同名的女孩，不然微信名都不好解释了，最好拥有和你一样温暖的笑容，愿上帝怜爱，为我们安排一场不期而遇。 今天，师大的柳絮又开始飘了。故事从头，我对你依然心动。","categories":[{"name":"思考","slug":"思考","permalink":"https://codave.github.io/categories/思考/"}],"tags":[{"name":"感情","slug":"感情","permalink":"https://codave.github.io/tags/感情/"}]},{"title":"杂文-关于别人","slug":"杂文-关于别人","date":"2019-01-30T14:59:37.000Z","updated":"2019-01-30T15:31:35.901Z","comments":true,"path":"2019/01/30/杂文-关于别人/","link":"","permalink":"https://codave.github.io/2019/01/30/杂文-关于别人/","excerpt":"","text":"&#160; &#160; &#160; &#160;这里是一个别人的故事。&#160; &#160; &#160; &#160;高中的时候，我曾经交往过一个女朋友。有一天我半夜从梦中醒来，突然无比的想她。那时候手机还没有像现在这样普及，我的思念自然无从寄托。在床上瞪了一会儿眼睛以后，我跳起来麻利地穿好衣服，出门去找她了。尽管第二天上早自习我就能够见到她。那时候我以为了方便学习的名义在外面自己租房住，所以也不会遇到宿管大爷这种阻碍，可以来一场说走就走。出了门才发现外面下着大雪，地上已经有着厚厚的积雪，天空中雪花还如筛灰一般落下。但心怀着爱情的炽热，我丝毫没觉得冷。北方下雪的冬夜格外寂静，此时已经是凌晨两点以后，街上没有一个行人，只有我自己踏在积雪上的声音格外清晰。我穿过那条横穿这个小县城的街道，来到我当时女朋友家的楼下。然而我什么都做不了，楼门紧锁，况且即使开着我也没勇气在半夜里去挑战她母亲的忍耐度。于是我在楼下冒着大雪站了一会儿，抽了一支烟，惆怅了一阵子之后，就顺道拐去了网吧……直到很久以后，时过境迁，妹子已经再无联系，而我也不是那能半夜扛住风雪的鸡血少年，我才领悟自己当时的心态。那不过是一种表演罢了，除了把自己感动一下，制造一点自己痴情的假象，一点意义都没有。在感情中，我们往往觉得自己掏心掏肺，所做所为能够感天动地，闻者伤心，见者叹息，为什么偏偏感动不了你？我们总是容易用一种自虐的方式制造出一种痴情的假象来使得自己站在感情的道德制高点上，获得一种畸形的满足感和安全感。其实无论是雪夜去对方家楼下站会儿或者是冒着大雨给她送一杯奶茶什么的，自己回想起来往往觉得如乔峰大战聚贤庄、关羽千里走单骑一样壮怀激烈，而对于对方来说，一杯奶茶就是一杯奶茶，无法承载起你想要在上面寄托的山崩地裂的情怀。少年的时候，总是迫不及待地将自己的满腔爱意表达出来，而结果往往是陷入表演之中而不自知。所以两个人的记忆才会出现偏差，那些你觉得刻骨铭心的过去，对方往往没有同样的感觉，甚至茫然不知。成长的标志就是懂得克制自己。克制自己的情绪，克制自己的表演欲，甚至克制自己的喜欢。少年时候，喜欢一个人恨不能把她变成自己身体的一部分，她刚说冷，我这边心里已经结冰了，她说难过，我立马如丧考妣，比她还难过，唯恐无法将自己的爱意表达出来。而事实上，谁也无法承担起另一个人的价值寄托，只有做一个独立、有价值的人，才能真正学会去爱另一个人。也千万不要尝试改变另一个人，这注定是徒劳的。做自己就好，爱情的真谛在于相互的吸引、志趣相投的同行，而不是追逐和依附。","categories":[{"name":"思考","slug":"思考","permalink":"https://codave.github.io/categories/思考/"}],"tags":[{"name":"情感","slug":"情感","permalink":"https://codave.github.io/tags/情感/"}]},{"title":"NTRU算法的分析","slug":"NTRU算法的分析","date":"2019-01-23T08:16:02.000Z","updated":"2019-01-30T15:54:07.110Z","comments":true,"path":"2019/01/23/NTRU算法的分析/","link":"","permalink":"https://codave.github.io/2019/01/23/NTRU算法的分析/","excerpt":"","text":"NTRU简述&#160; &#160; &#160; &#160;NTRU(Number Theory Research Unit)公开密钥体制是由美国布朗大学三位数学教授(Jeffrey Hoffstein,JillPipher,Joseph H.Silverman)发明的，其安全性是基于数论中在一个非常大的维数格中寻找一个很短向量的数学难题。相对于离散对数或大数分解等公开秘密体制来说，它有许多优势。在安全性方面，NTRU算法具有抵抗量子计算攻击的能力，而RSA和ECC算法是无法抵抗量子计算的。 NTRU算法的描述NTRU算法的数论基础&#160; &#160; &#160; &#160;设有整数环Z、整数N$ \\geq$2，用R表示多项式截断环时，R可以写成：R=Z[X]/(X^N^-1)，对于任意的正整数q，令R _q_ 代表模q的多项式截断环时，R _q_可以写成：","categories":[{"name":"密码学","slug":"密码学","permalink":"https://codave.github.io/categories/密码学/"}],"tags":[{"name":"NTRU","slug":"NTRU","permalink":"https://codave.github.io/tags/NTRU/"}]},{"title":"如何在Hexo博客中添加网易云音乐播放器","slug":"如何在Hexo博客中添加网易云音乐播放器","date":"2019-01-23T05:49:33.000Z","updated":"2019-01-30T15:57:57.461Z","comments":true,"path":"2019/01/23/如何在Hexo博客中添加网易云音乐播放器/","link":"","permalink":"https://codave.github.io/2019/01/23/如何在Hexo博客中添加网易云音乐播放器/","excerpt":"&#160; &#160; &#160; &#160;在已经搭建好Github Page博客的前提下，我们可以在自己的博客中加上音乐播放器，那就非常完美啦！这里我选择网易云音乐。","text":"&#160; &#160; &#160; &#160;在已经搭建好Github Page博客的前提下，我们可以在自己的博客中加上音乐播放器，那就非常完美啦！这里我选择网易云音乐。 步骤一&#160; &#160; &#160; &#160;首先，打开网易云音乐网站，登录自己的账号打开自己的歌单（歌单可以在PC端或者APP客户端上自由创建），也可以不登录直接搜索自己最近最喜欢的一首歌，点击后找到生成外链的链接，如下图： 步骤二&#160; &#160; &#160; &#160;你将会看到如下信息，网易云提供两种方式，一种iframe标签嵌套，另一个是flash插件，两种实现都可以。这里选择第一个。 步骤三&#160; &#160; &#160; &#160;接下来，可以根据自己需求选择尺寸。 步骤四&#160; &#160; &#160; &#160;然后，复制HTML代码，在根目录下的/theme/next/layout/_macro/sidebar.swig文件（侧边栏布局文件）中，选择你要添加播放器的位置，这里我选择添加在第136行处，并修改width=350，height=110。 步骤五&#160; &#160; &#160; &#160;大功告成！效果如下图:","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://codave.github.io/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://codave.github.io/tags/Hexo/"},{"name":"Github Page","slug":"Github-Page","permalink":"https://codave.github.io/tags/Github-Page/"}]},{"title":"如何在列表，字典，集合中根据条件筛选数据","slug":"如何在列表，字典，集合中根据条件筛选数据","date":"2019-01-17T08:09:25.000Z","updated":"2019-01-30T15:54:23.526Z","comments":true,"path":"2019/01/17/如何在列表，字典，集合中根据条件筛选数据/","link":"","permalink":"https://codave.github.io/2019/01/17/如何在列表，字典，集合中根据条件筛选数据/","excerpt":"","text":"实际案例 过滤掉列表[3,9，-1，10,20，-2…]中的负数 筛选字典{‘LiLei’:79,’Jim’:88,’Lucy’:92…}中值高于90的项 筛选集合{77,89,32,20…}中能被3整除的元素 对于以上问题，通常做法是通过迭代循环解决。比如问题1解决代码如下： 123456data = [1,5,-3,-2,6,0,9]res = []for x in data: if x &gt;= 0: res.append(x)print(res) 在列表中根据条件筛选数据 filter函数 列表解析 一.filter() 函数用于过滤序列，过滤掉不符合条件的元素，返回由符合条件元素组成的新列表。 该函数接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判，然后返回 True 或 False，最后将返回 True 的元素放到新列表中。 12345from random import randintdata = [randint(-10, 10) for _ in range(10)]print(data)res = filter(lambda x: x &gt;= 0, data)print(res) 注：lambda函数是匿名函数 二.列表解析 1[x for x in data if x &gt;= 0] 在字典中根据条件筛选数据12345from random import randintd = &#123;x: randint(60, 100) for x in range(1, 21)&#125;print(d)res = &#123;k: v for k, v in d.iteritems() if v &gt; 90&#125;print(res) 在集合中根据条件筛选数据1234data = [randint(-10, 10) for _ in range(10)]s = set(data)res = &#123;x for x in s if x%3 == 0&#125;print(res)","categories":[{"name":"Python","slug":"Python","permalink":"https://codave.github.io/categories/Python/"}],"tags":[{"name":"filter","slug":"filter","permalink":"https://codave.github.io/tags/filter/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-10-19T09:03:25.489Z","updated":"2018-10-22T04:12:17.539Z","comments":true,"path":"2018/10/19/hello-world/","link":"","permalink":"https://codave.github.io/2018/10/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}