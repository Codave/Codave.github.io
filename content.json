{"meta":{"title":"未来可期","subtitle":"技术博客","description":"不负过往，不惧未来。","author":"Codave","url":"https://codave.github.io"},"pages":[{"title":"关于","date":"2018-10-20T06:55:15.000Z","updated":"2018-10-21T01:41:08.675Z","comments":true,"path":"about/index.html","permalink":"https://codave.github.io/about/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-10-20T06:50:31.000Z","updated":"2018-10-21T01:41:51.465Z","comments":true,"path":"categories/index.html","permalink":"https://codave.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-10-20T06:48:56.000Z","updated":"2018-10-21T01:42:10.598Z","comments":true,"path":"tags/index.html","permalink":"https://codave.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"如何在Hexo博客中添加网易云音乐播放器","slug":"如何在Hexo博客中添加网易云音乐播放器","date":"2019-01-23T05:49:33.000Z","updated":"2019-01-23T07:38:21.131Z","comments":true,"path":"2019/01/23/如何在Hexo博客中添加网易云音乐播放器/","link":"","permalink":"https://codave.github.io/2019/01/23/如何在Hexo博客中添加网易云音乐播放器/","excerpt":"","text":"​ 在已经搭建好gitpage博客的前提下，我们可以在自己的博客中加上音乐播放器，那就非常完美啦！这里我选择网易云音乐。 1.首先，打开网易云音乐网站，登录自己的账号打开自己的歌单（歌单可以在PC端或者APP客户端上自由创建），也可以不登录直接搜索自己最近最喜欢的一首歌，点击后找到生成外链的链接，如下图： 2.你将会看到如下信息，网易云提供两种方式，一种iframe标签嵌套，另一个是flash插件，两种实现都可以。这里选择第一个。 3.接下来，可以根据自己需求选择尺寸。 4.然后，复制HTML代码，在根目录下的/theme/next/layout/_macro/sidebar.swig文件（侧边栏布局文件）中，选择你要添加播放器的位置，这里我选择添加在第136行处，并修改width=350，height=110。 5.效果如下图:","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://codave.github.io/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://codave.github.io/tags/Hexo/"}]},{"title":"Hexo上传图片在网页无法显示的解决办法","slug":"Hexo上传图片在网页无法显示的解决办法","date":"2019-01-23T05:47:23.000Z","updated":"2019-01-23T05:48:00.104Z","comments":true,"path":"2019/01/23/Hexo上传图片在网页无法显示的解决办法/","link":"","permalink":"https://codave.github.io/2019/01/23/Hexo上传图片在网页无法显示的解决办法/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"如何在列表，字典，集合中根据条件筛选数据","slug":"test","date":"2019-01-17T08:09:25.000Z","updated":"2019-01-22T14:42:14.111Z","comments":true,"path":"2019/01/17/test/","link":"","permalink":"https://codave.github.io/2019/01/17/test/","excerpt":"","text":"实际案例 过滤掉列表[3,9，-1，10,20，-2…]中的负数 筛选字典{‘LiLei’:79,’Jim’:88,’Lucy’:92…}中值高于90的项 筛选集合{77,89,32,20…}中能被3整除的元素 对于以上问题，通常做法是通过迭代循环解决。比如问题1解决代码如下： 123456data = [1,5,-3,-2,6,0,9]res = []for x in data: if x &gt;= 0: res.append(x)print(res) 在列表中根据条件筛选数据 filter函数 列表解析 一.filter() 函数用于过滤序列，过滤掉不符合条件的元素，返回由符合条件元素组成的新列表。 该函数接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判，然后返回 True 或 False，最后将返回 True 的元素放到新列表中。 12345from random import randintdata = [randint(-10, 10) for _ in range(10)]print(data)res = filter(lambda x: x &gt;= 0, data)print(res) 注：lambda函数是匿名函数 二.列表解析 1[x for x in data if x &gt;= 0] 在字典中根据条件筛选数据12345from random import randintd = &#123;x: randint(60, 100) for x in range(1, 21)&#125;print(d)res = &#123;k: v for k, v in d.iteritems() if v &gt; 90&#125;print(res) 在集合中根据条件筛选数据1234data = [randint(-10, 10) for _ in range(10)]s = set(data)res = &#123;x for x in s if x%3 == 0&#125;print(res)","categories":[{"name":"Python","slug":"Python","permalink":"https://codave.github.io/categories/Python/"}],"tags":[{"name":"filter","slug":"filter","permalink":"https://codave.github.io/tags/filter/"}]},{"title":"如何在列表，字典，集合中根据条件筛选数据","slug":"如何在列表，字典，集合中根据条件筛选数据","date":"2019-01-17T08:09:25.000Z","updated":"2019-01-22T14:39:26.482Z","comments":true,"path":"2019/01/17/如何在列表，字典，集合中根据条件筛选数据/","link":"","permalink":"https://codave.github.io/2019/01/17/如何在列表，字典，集合中根据条件筛选数据/","excerpt":"","text":"实际案例 过滤掉列表[3,9，-1，10,20，-2…]中的负数 筛选字典{‘LiLei’:79,’Jim’:88,’Lucy’:92…}中值高于90的项 筛选集合{77,89,32,20…}中能被3整除的元素 对于以上问题，通常做法是通过迭代循环解决。比如问题1解决代码如下： 123456data = [1,5,-3,-2,6,0,9]res = []for x in data: if x &gt;= 0: res.append(x)print(res) 在列表中根据条件筛选数据 filter函数 列表解析 一.filter() 函数用于过滤序列，过滤掉不符合条件的元素，返回由符合条件元素组成的新列表。 该函数接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判，然后返回 True 或 False，最后将返回 True 的元素放到新列表中。 12345from random import randintdata = [randint(-10, 10) for _ in range(10)]print(data)res = filter(lambda x: x &gt;= 0, data)print(res) 注：lambda函数是匿名函数 二.列表解析 1[x for x in data if x &gt;= 0] 在字典中根据条件筛选数据12345from random import randintd = &#123;x: randint(60, 100) for x in range(1, 21)&#125;print(d)res = &#123;k: v for k, v in d.iteritems() if v &gt; 90&#125;print(res) 在集合中根据条件筛选数据1234data = [randint(-10, 10) for _ in range(10)]s = set(data)res = &#123;x for x in s if x%3 == 0&#125;print(res)","categories":[{"name":"Python","slug":"Python","permalink":"https://codave.github.io/categories/Python/"}],"tags":[{"name":"filter","slug":"filter","permalink":"https://codave.github.io/tags/filter/"}]},{"title":"如何在NexT中添加网易云音乐播放器","slug":"如何在NexT中添加网易云音乐播放器","date":"2018-10-21T15:19:54.449Z","updated":"2019-01-22T15:24:03.359Z","comments":true,"path":"2018/10/21/如何在NexT中添加网易云音乐播放器/","link":"","permalink":"https://codave.github.io/2018/10/21/如何在NexT中添加网易云音乐播放器/","excerpt":"","text":"在已经搭建好gitpage博客的前提下，我们可以在自己的博客中加上音乐播放器，那就非常完美啦！这里我选择网易云音乐。 1.首先，打开网易云音乐网站，登录自己的账号打开自己的歌单（歌单可以在PC端或者APP客户端上自由创建），也可以不登录直接搜索自己最近最喜欢的一首歌，点击后找到生成外链的链接，如下图： 1![Alt text](1.jpg)","categories":[{"name":"NexT","slug":"NexT","permalink":"https://codave.github.io/categories/NexT/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://codave.github.io/tags/Hexo/"},{"name":"NexT","slug":"NexT","permalink":"https://codave.github.io/tags/NexT/"}]},{"title":"基于Hexo的NexT主题基础设置及优化","slug":"基于Hexo的NexT主题基础设置及优化","date":"2018-10-20T14:34:52.000Z","updated":"2019-01-22T14:34:14.181Z","comments":true,"path":"2018/10/20/基于Hexo的NexT主题基础设置及优化/","link":"","permalink":"https://codave.github.io/2018/10/20/基于Hexo的NexT主题基础设置及优化/","excerpt":"","text":"","categories":[{"name":"NexT","slug":"NexT","permalink":"https://codave.github.io/categories/NexT/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://codave.github.io/tags/Hexo/"},{"name":"NexT","slug":"NexT","permalink":"https://codave.github.io/tags/NexT/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-10-19T09:03:25.489Z","updated":"2018-10-22T04:12:17.539Z","comments":true,"path":"2018/10/19/hello-world/","link":"","permalink":"https://codave.github.io/2018/10/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}